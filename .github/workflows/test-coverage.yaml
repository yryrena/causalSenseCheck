name: test-coverage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      ## install dependencies (Imports + Suggests) AND covr
      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      ## optional debug: confirm Suggests installed
      - name: Debug installed packages
        run: |
          Rscript -e 'print(sessionInfo()); pkgs <- c("grf","AER","fixest","ggplot2","rmarkdown"); print(pkgs); print(sapply(pkgs, requireNamespace, quietly=TRUE))'

      ## run tests, compute coverage, and write LCOV report manually
      - name: Run tests & compute coverage (generate lcov manually)
        run: |
          Rscript -e '
            # 1. run coverage
            cov <- covr::package_coverage()
            print(cov)

            # 2. convert coverage object to a data.frame
            #    expected cols: filename, line, value
            df <- as.data.frame(cov)

            # safety check: drop rows with NA line numbers (sometimes appear for non-source lines)
            df <- df[!is.na(df$line), , drop = FALSE]

            # 3. function to write LCOV format
            write_lcov_df <- function(df, file = "coverage.lcov") {
              con <- file(file, open = "wt")
              on.exit(close(con), add = TRUE)

              ## split by filename
              files <- split(df, df$filename)

              for (fn in names(files)) {
                block <- files[[fn]]

                ## start of record
                writeLines("TN:", con)
                writeLines(paste0("SF:", fn), con)

                ## each executable line => DA:<line>,<hits>
                ## make sure they are integers
                for (k in seq_len(nrow(block))) {
                  ln <- as.integer(block$line[k])
                  hits <- as.integer(block$value[k])
                  writeLines(paste0("DA:", ln, ",", hits), con)
                }

                ## end of record
                writeLines("end_of_record", con)
              }
            }

            write_lcov_df(df, file = "coverage.lcov")
          '

      ## upload coverage.lcov to Codecov using their official uploader
      - name: Upload coverage to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          ## download official Codecov uploader
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov

          ## derive slug (owner/repo) 
          SLUG="${GITHUB_REPOSITORY}"

          ## force-assign branch to "main" so Codecov updates main dashboard
          ./codecov \
            -f coverage.lcov \
            --slug "${SLUG}" \
            --branch "main" \
            --commit "${GITHUB_SHA}" \
            --token "${CODECOV_TOKEN}" \
            -n "gha-${GITHUB_SHA}" \
            -F unittests \
            -v

