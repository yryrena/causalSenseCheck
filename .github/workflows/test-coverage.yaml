name: test-coverage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      ## install dependencies (Imports + Suggests) AND covr
      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      ## optional debug: see which heavy Suggests got installed
      - name: Debug installed packages
        run: |
          Rscript -e 'print(sessionInfo()); pkgs <- c("grf","AER","fixest","ggplot2","rmarkdown"); print(pkgs); print(sapply(pkgs, requireNamespace, quietly=TRUE))'

      ## run tests, compute coverage, and write Cobertura XML report to coverage.xml
      - name: Run tests & compute coverage (generate XML)
        run: |
          Rscript -e '
            cov <- covr::package_coverage()
            print(cov)
            # Write coverage in Cobertura XML format
            covr::cobertura(cov, file = "coverage.xml")
          '
 
      - name: Upload coverage to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          ## download Codecov uploader (bash version)
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ## upload the XML report 
          ./codecov \
            -f coverage.xml \
            -n "gha-${GITHUB_SHA}" \
            -F unittests \
            -s . \
            -R "${GITHUB_WORKSPACE}" \
            -t "${CODECOV_TOKEN}" \
            -B "${GITHUB_REF_NAME}" \
            -C "${GITHUB_SHA}"
