name: test-coverage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      ## install package dependencies, INCLUDING Suggests,
      ## and also install covr explicitly 
      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      ## show which heavy Suggests actually installed
      - name: Debug installed packages
        run: |
          Rscript -e 'print(sessionInfo()); pkgs <- c("grf","AER","fixest","ggplot2","rmarkdown"); print(pkgs); print(sapply(pkgs, requireNamespace, quietly=TRUE))'

      ## run tests, compute coverage, upload to Codecov
      - name: Run tests & compute coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          Rscript -e '
            # 1. run tests + coverage
            cov <- covr::package_coverage()
            print(cov)

            # 2. parse repo owner/name (e.g. "yryrena/causalSenseCheck")
            repo_full <- Sys.getenv("GITHUB_REPOSITORY")
            parts <- strsplit(repo_full, "/", fixed = TRUE)[[1]]
            owner <- parts[1]
            repo_name <- parts[2]

            # 3. explicit upload to codecov
            covr::codecov(
              coverage = cov,
              quiet = FALSE,
              token = Sys.getenv("CODECOV_TOKEN"),
              commit = Sys.getenv("GITHUB_SHA"),
              branch = Sys.getenv("GITHUB_REF_NAME"),
              slug = repo_full,
              owner = owner,
              repo = repo_name
            )
          '

      - name: Upload coverage report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: covr-report
          path: covr.Rout*
